[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rag-demo"
version = "3.0.0-beta"
description = "Aplicação educacional RAG para demonstração de PLN - Versão Beta"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Equipe RAG-Demo", email = "contato@rag-demo.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Education",
]
requires-python = ">=3.12"
dependencies = [
    "Flask>=3.0.0",
    "Flask-CORS>=4.0.0",
    "Flask-SocketIO>=5.3.6",
    "python-socketio>=5.10.0",
    "python-engineio>=4.8.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "langchain-community>=0.0.10",
    "langchain-core>=0.1.10",
    "langchain-text-splitters>=0.0.1",
    "pypdf2>=3.0.1",
    "python-docx>=1.1.0",
    "python-dotenv>=1.0.0",
    "qdrant-client>=1.7.0",
    "minio>=7.2.0",
    "requests>=2.31.0",
    "Werkzeug>=3.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/rag-demo/rag-demo"
Repository = "https://github.com/rag-demo/rag-demo"
Documentation = "https://rag-demo.readthedocs.io"
"Bug Tracker" = "https://github.com/rag-demo/rag-demo/issues"

[project.scripts]
rag-demo = "app:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
] 